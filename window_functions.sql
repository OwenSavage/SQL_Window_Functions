SELECT * FROM TOP_ATHLETES;
WITH middle as (
SELECT
    NAME,
    SPORT,
    EARNINGS,
    YEAR,
    MAX(EARNINGS) OVER (PARTITION BY SPORT, YEAR ORDER BY EARNINGS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS PRIOR_MAX
FROM
    TOP_ATHLETES
WHERE
    SPORT = 'Football'
ORDER BY
    YEAR)

SELECT * FROM middle WHERE EARNINGS = PRIOR_MAX;


SELECT
    NAME,
    EARNINGS,
    AVG(EARNINGS) OVER (PARTITION BY SPORT) AS SPORT_AVG,
    SPORT,
    CASE WHEN EARNINGS >= (AVG(EARNINGS) OVER (PARTITION BY SPORT)) THEN TRUE ELSE FALSE END AS ABOVE_AVG
FROM
    TOP_ATHLETES
ORDER BY
    EARNINGS DESC;



SELECT
    NAME,
    SPORT,
    RANK() OVER (PARTITION BY SPORT ORDER BY EARNINGS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
FROM
    TOP_ATHLETES
GROUP BY
    SPORT, NAME
ORDER BY
    NAME;

WITH temp AS (
    SELECT
        NAME,
        SPORT,
        SUM(EARNINGS) AS TOTAL_EARNINGS
    FROM
        TOP_ATHLETES
    GROUP BY
        NAME, SPORT),

temp_2 AS (
SELECT
    *,
    RANK() OVER (PARTITION BY SPORT ORDER BY TOTAL_EARNINGS DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SPORT_RANK
FROM
    temp
ORDER BY
    NAME)

SELECT
    *
FROM
    temp_2
WHERE
    SPORT_RANK = 1;

